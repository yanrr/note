#
    emacs功能类似于vim，且比其强大，但是内存比较大，而且打开就是插入模式的窗口，操作有些不便
    ect/apt/sources.list    //查看其下载路径
    ect/apt$ dpkg -L tree   //查看tree的安装位置

#hen
     xxx     find a string in a project
        1.git clone https://github.com/happypeter/hen.git
        2.cd hen/search/curse:-1.sudo make install -2.make
        3.The current directory have Makefile can follow
        4.execute  eg:xxx times<cr>,摁e进入，退出时:q<cr>  //In a program in quickly find that the location of ”times“

#some instructions
    
    gcc -o xxx xxx.c  -lcurses  //若没有-lcurses会报错，因为一般情况下，系统默认
链接的是标准库,即-lc(libc),而xxx.c中包含的某些函数在libncurses中,所以必须要写
   
    make 编译生成二进制文件file,再ldd file查看其函数链接库  //eg:ldd file

    find dir|grep file  //In this directory for a file  

    ps aux | grep firefox   //查看firefox的运行行程，ps aux可查看当前所有运行的行程
    kill 2003       //关闭正在运行的行程，2003为系统为其随机设定的唯一编号
    kill -9 2003    //Compulsory closed, used for the trip to crash

    sudo passwd akaedu  //Cipher amending directive
    which ...    //Check the procedure of storage location,only instruction
                   eg:which ls
    locate ...   //ad:Quick search the entire system of matching files;
                   disad:Can only see the existed before the matching of the file, on the same day the matching of the modified file does not show
    sudo updatedb   //Update the locate datebase

# markdown

    http://happypeter.github.com/LGCB/book/toy_markdown.html

    1.download and install markdown

      sudo apt-get install markdown         (download)
      sudo apt-get install purge markdown   (unload)

    2.creat a file

      vim file.md  

    3.change .md to .html

      markdown file.md > file.html

    4.open .html file

      firefox file.html


# git

  ## install:

    sudo apt-get install ‘git-core’
   
    sudo apt-get install ’tig‘  //View to renew the content

    git pull    //Update

  ##git basics

    1. first create a dir

        mkdir ggg

    2.now you MUST cd to this dir

        cd ggg

    3. initializing this git dir

      git init

    //now you can see a `.git` in this dir

        ls -a

    4. now create a file

        vim hello.c

    5. let git knows about this file

        git add hello.c

    6. create the first version

        git commit -a -m "my first version"   //-a跟踪所有修改-m修改信息，说明性内容，说明为什么修改等
        git commit -a -v        //-v表示在写修改原因的同时，也显示本次修改的内容

    7.Upload new commit to the repository

         git remote add origin git@github.com:yanrr/xxx.git  //xxx为仓库名

         git push -u origin master    //master是仓库的一部分

    8.Update commit

       每次修改完一个版本上传时只需重复执行6和7的第二步即可,每个文件或工程必须有自己私有的.git仓库，否则github历史就会混乱

    ##across
                git checkout 891398d2f408241    //Modify the state before that (穿越)those number are the modified code

                git chectout master             //restore  (返回)

                git checkout 891398d2f408241 -b name //Give the name of the state,So that the next time access convenient

                git branch      //Check branch

                git status      //Check the current state of branch

                git chectout name   //Direct access to the state

                git branch -D name  //delete the branch

                git merge tmp   //若不小心忘了返回直接在tmp分支上作了修改，可直接把修改置于master上

    ##github

       http://www.happypeter.org/posts/21   // github 操作的具体步骤

      1.login my github in github website   //https://github.com
 
      2.add SSH public keys

        cd /home/akaedu

        mv .ssh/ akaedu-ssh

        ssh-keygen(一直enter)

        cd .ssh(复制.ssh中的内容，注意不要复制空格)

        在github网页中的SSH pubilc keys中add即可

      3.creat new repository

        Dashboard->Create A Repository

      4.重复git basics中的7步(若已经有git跟踪的文件可不用执行本步骤)

      5.rename repository

        git remote add origin + 仓库链接

      6.更新版本之后上传至仓库

        git push -u origin master    //master is a part of repository

      7.git config    git配置   //若是已经存在的仓库就不用执行这步

        cd 要上传的文件

        git config --global user.name "yanrr"

        git config --global user.email 454814890@qq.com

# tips

   Clear screen : Ctrl-l

   Copy and Paste: select -> middle button

#压缩命令：

   1.tar.gz包： tar zcvf dir.tar.gz dir
   2.tar.bz2包： tar jcvf dir.tar.bz2 dir

#解压命令：

   1.tar.gz包： tar zxvf dir.tar.gz
   2.tar.bz2包： tar jxvf dir.tar.bz2

#zip包解压：
	unzip dir.zip (-d ~/.vim)  //括号里的内容就是将其解压到～中的.vim中

#vim
    
    http://www.derekwyatt.org/vim/vim-tutorial-videos/vim-novice-tutorial-videos/
    安装vim插件的实质，就是将插件复制到～条件下的.vim中

    ## multiple files               //在vim中打开多个文件
        :ls #see buffers        //可同时看到多个打开的文件
        :bn # go to next buffer     //看下一个文件
        :bp # go to previous buffer //看上一个文件
        :bd # delete a buffer   //删除文件 
        :new file #横向打开一个vim
        :vnew file #纵向打开一个vim

    ##Basic vim operation
        ###
          1.Normal mode
            yy -- to copy current line
            dd -- to cut the current line
            p  -- to past
            ：h ...   eg:':h vim'  //look for help
          2.i + Ctrl+t / Ctrl+d  Insert mode, automatic downlink and uplink alignment 
        ###visual line
          1. 启动和退出: V      //v 可视块
          2. 整体缩进/退回几行代码：
                首先用可视行模式选中这几行,然后 `>/< + shift'

        ### .vimrc  //home下的创建本机的.vimrc，该文件是vim的配置文件
             1.:set spell  //若有拼写错误会提示，但最好不要写进vimrc中，因为好多都是简写，也会报错
             2."将:set spell 映射为 ,ss  检查其拼写错误(非.c文件,c只查注释) <cr>表示回车
                map ,ss :set spell<cr>
             3.
                :set number   //然后在vim中些东西时，换行可自动加上数字
                :set hidden    //然后在vim中打开多个文件时，修改了但未保存，隐藏其提示信息
                :set autoindent //自动缩进，即在普通模式下，摁o可直接进入插入模式，且与上下行对齐
                :set expandtab  //Use Tab instead of space
                :set tabstop=4
                :set dictionary=/user/share/dict/words //Ctrl+x+f自动补全路径;Ctrl+x+k自动补全单词

##vim .gitconfig
	 [user]
        	name = yanrr
        	email = 454814890@qq.com
	 [core]
      	 	editor = vim   //在git commit -a 时便于操作
 	 [alias]
   		 ci = commit -a -v
   		 co = checkout
   		 st = status
   		 br = branch
    		 throw = reset --hard HEAD     //Revoked the latest modification
    		 thrown = reset --hard HEAD^   //Revoked the latest revision
             revert = revert HEAD  //恢复到push之前的状态，其history依然存在
	 [color]
    		 ui = true

	 [commit]
      		 template = ./.commit-template

    ## open another bash in vim

         1.先保存文件即:w

         2.open bash :sh

         3.close bash = ctrl d

         4.退出vim  :q

       可在不关闭vim的情况下编译源程序，方便源程序的修改

#clone others respository

  1. git clone + chained address

  2. git pull    //进入克隆的文件夹内，执行后可更新克隆的仓库
  
  3.tig  //Check the update   /gource can realize the function,beautiful and graphic

#the reason why .swap file appearing

   1. open the same file twice sametime

   2. close the file unusual
#bashrc
    .bashrc is the configation of bash.alias is used to rename command an so on
    
      eg: alias install='sudo apt-get install'

#visit other user
    
    ifconfig    查看本机IP地址
    ssh peter@192.168.1.17      //在～下，可进入该用户访问并操作，退出时Ctrl+d，下次登录就不必输入密码;  
    sudo service ssh stop；     //关闭访问
    sudo service ssh start      //在～下，该机器可被别人访问；
    scp -r peter@192.168.1.17:~/xxx .   //(.为本机路径,cp to...)可拷贝访问用户的内容

#ctags

    在代码比较庞大时，用其可快速找到函数的定义和调用
    ctags ...   eg:ctags hello.c   //自动生成tags文件
    Ctrl+] from call to defination
    Ctrl+t go back    Ctrl+o from defination to call

#C
      http://tldp.org/HOWTO/Program-Library-HOWTO/

# html study    //html为网页制作环境

      http://www.w3schools.com/

# Video

      http://www.happypeter.org/posts

      http://www.happypeter.org/posts/10    //tar

      http://media.happypeter.org/screencasts.html

#ref

      http://happypeter.github.com/LGCB/

      http://billie66.github.com/TLCL/book/       /*/

# some usefull sites

      http://www.linfo.org/

      http://www.wikipedia.org/

      http://news.ycombinator.com/news

